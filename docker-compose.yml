version: '2.1'

networks:

  gwnet:
    ipam:
      driver: default
      config:
        - subnet: 172.30.0.0/16
          ip_range: 172.30.0.0/24
          # gateway: 172.30.0.254

  clients:
    enable_ipv6: true
    internal: true
    ipam:
      driver: default
      config:
        - subnet: fd30:252e:b4f5::/64
        - subnet: 172.29.0.0/24
          ip_range: 172.29.0.0/24
          gateway: 172.29.0.1

services:

  nat64:
    image: creatordev/docker-nat64
    container_name: docker-nat64
    privileged: true
    stdin_open: true
    networks:
      gwnet:
        ipv4_address: 172.30.0.2
      clients:
        ipv4_address: 172.29.0.2
        ipv6_address: fd30:252e:b4f5::2/64
    environment:
      TAYGA_CONF_IPV4_ADDR: "172.30.1.1"
      TAYGA_CONF_DYNAMIC_POOL: "172.30.1.0/24"
      TAYGA_CONF_PREFIX: "fd30:252e:b4f5::/64"
      TAYGA_ROUTER_IPV4: "172.30.0.2"
      TAYGA_ROUTER_IPV6: "fd30:252e:b4f5::1/64"
    # entrypoint: ash
    # command: []

  simple:
    image: alpine-curl
    build:
      context: alpine-curl
    stdin_open: true
    entrypoint: ash
    command: []
    networks:
      gwnet: {}
    depends_on:
    - nat64

  simple6:
    image: alpine-curl
    privileged: true
    build:
      context: alpine-curl
    stdin_open: true
    entrypoint: /set-gateway.sh
    command: ["172.29.0.2","ash"]
    networks:
      clients: {}
    depends_on:
    - nat64
